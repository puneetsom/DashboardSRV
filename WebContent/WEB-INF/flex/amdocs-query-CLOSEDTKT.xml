<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql SYSTEM "amdocs-query-config.dtd">
<sql type="CdwSQL">
	
	<statement code="CLOSEDTKT_Load_Date"><![CDATA[
select   round(nvl(business_days(helpdesk_load_date, add_months(trunc(helpdesk_load_date,'MM'),1)),0),2) month_bus_days_left
       , round(nvl(business_days(helpdesk_load_date, add_months(trunc(helpdesk_load_date,'Q'),3)),0),2) qtr_bus_days_left
       , greatest(round(nvl(business_days(helpdesk_load_date, add_months(trunc(helpdesk_load_date,'MM'),1)-6),0),2),0) month_resolve_days_left
       , greatest(round(nvl(business_days(helpdesk_load_date, add_months(trunc(helpdesk_load_date,'Q'),3)-6),0),2),0) qtr_resolve_days_left
       , helpdesk_load_date
from     dash_process_control
	]]></statement>
	
	<statement code="CLOSEDTKT_Menu_Data"><![CDATA[
with smy_data as
(select c.*
      , trunc(close_month,'Q') close_qtr
      , trunc(helpdesk_load_date,'Q') selected_qtr
      , trunc(helpdesk_load_date,'MM') selected_month
      , pct_resolve_days_used_fn('M', trunc(helpdesk_load_date, 'MM')) month_bus_days_used_pct
      , pct_resolve_days_used_fn('Q', trunc(helpdesk_load_date, 'Q')) qtr_bus_days_used_pct
 from  closed_ticket_mv c
       cross join (select helpdesk_load_date-6 helpdesk_load_date2,  helpdesk_load_date 
                   from   dash_process_control) dpc
 where close_month >= add_months(trunc(helpdesk_load_date,'MM'),-24)
)
, smy_data2 as (
select   type
       , assign_group
       , support_category
       , group_manager
       , group_pm
       -- month
       , sum(case when close_month = selected_month then all_tkt_cnt else 0 end) month_tot_tkt_cnt
       , sum(case when close_month = selected_month and env_parm_ind = 'Y' then all_tkt_cnt else 0 end) month_env_tkt_cnt
       , sum(case when close_month = selected_month and env_parm_ind = 'Y' then resolved_cnt else 0 end) month_env_resolved_cnt
       , (case when month_bus_days_used_pct = 0 then 0 else round(sum(case when close_month = selected_month and env_parm_ind = 'Y' then all_tkt_cnt + resolved_cnt else 0 end)/month_bus_days_used_pct,4) end) month_env_tkt_proj
       , (select sum(o.ticket_obj) from closed_ticket_obj o where o.close_month = selected_month and type = 'ALL') month_env_tkt_obj
       -- quarter
       , sum(case when close_qtr = selected_qtr then all_tkt_cnt else 0 end) qtr_tot_tkt_cnt
       , sum(case when close_qtr = selected_qtr and env_parm_ind = 'Y' then all_tkt_cnt else 0 end) qtr_env_tkt_cnt
       , (case when qtr_bus_days_used_pct = 0 then 0 else round(sum(case when close_qtr = selected_qtr and env_parm_ind = 'Y' then all_tkt_cnt + resolved_cnt else 0 end)/qtr_bus_days_used_pct,4) end) qtr_env_tkt_proj
       , (select sum(o.ticket_obj) from closed_ticket_obj o where trunc(o.close_month,'Q') = selected_qtr and type = 'ALL') qtr_env_tkt_obj
from     (select   'ASSIGN_GROUP' type
                 , assign_group
                 , support_category
                 , nvl(trim(group_manager),'UNDEFINED') group_manager
                 , nvl(trim(group_pm),'UNDEFINED') group_pm
                 , all_tkt_cnt
                 , resolved_cnt
                 , env_parm_ind
                 , close_month
                 , selected_month
                 , month_bus_days_used_pct
                 , close_qtr
                 , selected_qtr
                 , qtr_bus_days_used_pct
          from     smy_data
          union all 
          select   'SUPPORT_CATEGORY' type
                 , null assign_group
                 , support_category
                 , null group_manager
                 , null group_pm
                 , all_tkt_cnt
                 , resolved_cnt
                 , env_parm_ind
                 , close_month
                 , selected_month
                 , month_bus_days_used_pct
                 , close_qtr
                 , selected_qtr
                 , qtr_bus_days_used_pct
          from     smy_data
          union all   
          select   'PROJECT_MANAGER' type
                 , null assign_group
                 , null support_category
                 , nvl(trim(group_manager),'UNDEFINED') group_manager
                 , nvl(trim(group_pm),'UNDEFINED') group_pm
                 , all_tkt_cnt
                 , resolved_cnt
                 , env_parm_ind
                 , close_month
                 , selected_month
                 , month_bus_days_used_pct
                 , close_qtr
                 , selected_qtr
                 , qtr_bus_days_used_pct
          from     smy_data
          union all   
          select   'DIRECTOR' type
                 , null assign_group
                 , null support_category
                 , nvl(trim(group_manager),'UNDEFINED') group_manager
                 , null group_pm
                 , all_tkt_cnt
                 , resolved_cnt
                 , env_parm_ind
                 , close_month
                 , selected_month
                 , month_bus_days_used_pct
                 , close_qtr
                 , selected_qtr
                 , qtr_bus_days_used_pct
          from     smy_data
          union all   
          select   'ALL' type
                 , null assign_group
                 , null support_category
                 , null group_manager
                 , null group_pm
                 , all_tkt_cnt
                 , resolved_cnt
                 , env_parm_ind
                 , close_month
                 , selected_month
                 , month_bus_days_used_pct
                 , close_qtr
                 , selected_qtr
                 , qtr_bus_days_used_pct
          from     smy_data
         )
group by type
       , assign_group
       , support_category
       , group_manager
       , group_pm
       , month_bus_days_used_pct
       , selected_month
       , qtr_bus_days_used_pct
       , selected_qtr
), smy_data3 as 
(select   type
        , assign_group
        , support_category
        , group_manager
        , group_pm
        , (case when month_env_tkt_obj is not null then 
                case when month_env_tkt_proj/month_env_tkt_obj >= 1.05 then 'Blue'
                     when month_env_tkt_proj/month_env_tkt_obj >= 1 then 'Green'
                     when month_env_tkt_proj/month_env_tkt_obj >= 0.95 then 'Yellow'
                     when month_env_tkt_proj/month_env_tkt_obj < 0.95 then 'Red'
                     else 'Disabled'
                 end
                 else 'None'
           end) month_status
        , month_tot_tkt_cnt
        , month_env_tkt_cnt
        , month_env_tkt_proj
        , month_env_tkt_obj
        , (case when qtr_env_tkt_obj is not null then 
                case when qtr_env_tkt_proj/qtr_env_tkt_obj >= 1.05 then 'Blue'
                     when qtr_env_tkt_proj/qtr_env_tkt_obj >= 1 then 'Green'
                     when qtr_env_tkt_proj/qtr_env_tkt_obj >= 0.95 then 'Yellow'
                     when qtr_env_tkt_proj/qtr_env_tkt_obj < 0.95 then 'Red'
                     else 'Disabled'
                 end
                 else 'None'
           end) qtr_status
        , qtr_tot_tkt_cnt
        , qtr_env_tkt_cnt
        , qtr_env_tkt_proj
        , qtr_env_tkt_obj
 from     smy_data2
)
select   h.type
       , h.type               header_text
       , h.month_status       month_header_status
       , h.month_tot_tkt_cnt  month_header_tkt_cnt
       , h.month_env_tkt_cnt  month_header_env_tkt_cnt
       , h.month_env_tkt_proj month_header_env_tkt_proj
       , h.month_env_tkt_obj  month_header_env_tkt_obj
       , h.qtr_status         qtr_header_status
       , h.qtr_tot_tkt_cnt    qtr_header_tkt_cnt
       , h.qtr_env_tkt_cnt    qtr_header_env_tkt_cnt
       , h.qtr_env_tkt_proj   qtr_header_env_tkt_proj
       , h.qtr_env_tkt_obj    qtr_header_env_tkt_obj
       , null                 item_text
       , null                 month_item_status
       , null                 month_item_tkt_cnt
       , null                 month_item_env_tkt_cnt
       , null                 month_item_env_tkt_proj
       , null                 month_item_env_tkt_obj
       , null                 qtr_item_status
       , null                 qtr_item_tkt_cnt
       , null                 qtr_item_env_tkt_cnt
       , null                 qtr_item_env_tkt_proj
       , null                 qtr_item_env_tkt_obj
from     smy_data3 h 
where    h.type = 'ALL'
union all
select   h.type
       , h.group_manager       header_text
       , h.month_status        month_header_status
       , h.month_tot_tkt_cnt   month_header_tkt_cnt
       , h.month_env_tkt_cnt   month_header_env_tkt_cnt
       , h.month_env_tkt_proj  month_header_env_tkt_proj
       , h.month_env_tkt_obj   month_header_env_tkt_obj  
       , h.qtr_status          qtr_header_status
       , h.qtr_tot_tkt_cnt     qtr_header_tkt_cnt
       , h.qtr_env_tkt_cnt     qtr_header_env_tkt_cnt
       , h.qtr_env_tkt_proj    qtr_header_env_tkt_proj
       , h.qtr_env_tkt_obj     qtr_header_env_tkt_obj  
       , i.group_pm            item_text
       , i.month_status        month_item_status
       , i.month_tot_tkt_cnt   month_item_tkt_cnt
       , i.month_env_tkt_cnt   month_item_env_tkt_cnt
       , i.month_env_tkt_proj  month_item_env_tkt_proj
       , i.month_env_tkt_obj   month_item_env_tkt_obj
       , i.qtr_status          qtr_item_status
       , i.qtr_tot_tkt_cnt     qtr_item_tkt_cnt
       , i.qtr_env_tkt_cnt     qtr_item_env_tkt_cnt
       , i.qtr_env_tkt_proj    qtr_item_env_tkt_proj
       , i.qtr_env_tkt_obj     qtr_item_env_tkt_obj  
from     smy_data3 h
         join smy_data3 i
           on h.group_manager = i.group_manager
where    h.type = 'DIRECTOR'
and      i.type = 'PROJECT_MANAGER'
union all
select   h.type
       , h.group_pm            header_text
       , h.month_status        month_header_status
       , h.month_tot_tkt_cnt   month_header_tkt_cnt
       , h.month_env_tkt_cnt   month_header_env_tkt_cnt
       , h.month_env_tkt_proj  month_header_env_tkt_proj
       , h.month_env_tkt_obj   month_header_env_tkt_obj  
       , h.qtr_status          qtr_header_status
       , h.qtr_tot_tkt_cnt     qtr_header_tkt_cnt
       , h.qtr_env_tkt_cnt     qtr_header_env_tkt_cnt
       , h.qtr_env_tkt_proj    qtr_header_env_tkt_proj
       , h.qtr_env_tkt_obj     qtr_header_env_tkt_obj 
       , i.assign_group        item_text
       , i.month_status        month_item_status
       , i.month_tot_tkt_cnt   month_item_tkt_cnt
       , i.month_env_tkt_cnt   month_item_env_tkt_cnt
       , i.month_env_tkt_proj  month_item_env_tkt_proj
       , i.month_env_tkt_obj   month_item_env_tkt_obj
       , i.qtr_status          qtr_item_status
       , i.qtr_tot_tkt_cnt     qtr_item_tkt_cnt
       , i.qtr_env_tkt_cnt     qtr_item_env_tkt_cnt
       , i.qtr_env_tkt_proj    qtr_item_env_tkt_proj
       , i.qtr_env_tkt_obj     qtr_item_env_tkt_obj
from     smy_data3 h
         join smy_data3 i
           on h.group_pm = i.group_pm
where    h.type = 'PROJECT_MANAGER'
and      i.type = 'ASSIGN_GROUP'
union all
select   h.type
       , h.support_category    header_text
       , h.month_status        month_header_status
       , h.month_tot_tkt_cnt   month_header_tkt_cnt
       , h.month_env_tkt_cnt   month_header_env_tkt_cnt
       , h.month_env_tkt_proj  month_header_env_tkt_proj
       , h.month_env_tkt_obj   month_header_env_tkt_obj  
       , h.qtr_status          qtr_header_status
       , h.qtr_tot_tkt_cnt     qtr_header_tkt_cnt
       , h.qtr_env_tkt_cnt     qtr_header_env_tkt_cnt
       , h.qtr_env_tkt_proj    qtr_header_env_tkt_proj
       , h.qtr_env_tkt_obj     qtr_header_env_tkt_obj 
       , i.assign_group        item_text
       , i.month_status        month_item_status
       , i.month_tot_tkt_cnt   month_item_tkt_cnt
       , i.month_env_tkt_cnt   month_item_env_tkt_cnt
       , i.month_env_tkt_proj  month_item_env_tkt_proj
       , i.month_env_tkt_obj   month_item_env_tkt_obj
       , i.qtr_status          qtr_item_status
       , i.qtr_tot_tkt_cnt     qtr_item_tkt_cnt
       , i.qtr_env_tkt_cnt     qtr_item_env_tkt_cnt
       , i.qtr_env_tkt_proj    qtr_item_env_tkt_proj
       , i.qtr_env_tkt_obj     qtr_item_env_tkt_obj
from     smy_data3 h
         join smy_data3 i
           on h.support_category = i.support_category
where    h.type = 'SUPPORT_CATEGORY'
and      i.type = 'ASSIGN_GROUP'
order by 1, 2, 13
	]]></statement>
	
	<statement code="CLOSEDTKT_Monthly_Chart_Data"><![CDATA[
select   to_char(period_date, 'Mon-YY') label
       , 'Q'||to_char(period_date, 'Q-YYYY') label_group
       , period_date
       , (case when period_date = current_period then 'Y' else 'N' end) current_period_ind
       , (case when period_date <= current_period then other_cnt end) other_cnt
       , (case when period_date <= current_period then mnp_cnt end) mnp_cnt
       , (case when period_date <= current_period then cnt end) cnt
       , (case when period_date <= current_period then obj end) obj
       , (case when period_date <= current_period then cst_ftc_cnt end) cst_ftc_cnt
       , (case when period_date <= current_period then cst_ftc_pct end) cst_ftc_pct
       , proj_cnt
       , (case when period_date <= current_period then can_be_closed_cnt end) can_be_closed_cnt
       , (case when period_date <= current_period then week_cnt end) week_cnt
       , (case when period_date <= current_period then day_cnt end) day_cnt
       , resolved_cnt
       , (case when period_date <= current_period then month_avg end) month_avg
       , round(all_month_obj * 1.05) high_obj
       , round(all_month_obj * 0.95) low_obj
       , (case when obj is null then null
               when nvl(proj_cnt,cnt)/obj >= 1.05 then 'blue'
               when nvl(proj_cnt,cnt)/obj >= 1 then 'green'
               when nvl(proj_cnt,cnt)/obj >= 0.95 then 'yellow'
               when nvl(proj_cnt,cnt)/obj < 0.95 then 'red'
          end) tkt_status
from     (select   pc.current_period
                 , pc.period_date
                 , nvl(other, 0) other_cnt
                 , nvl(mnp, 0) mnp_cnt
                 , nvl(all_tkt, 0) cnt
                 , ct.ticket_obj obj
                 , nvl(cst_ftc, 0) cst_ftc_cnt
                 , round(case when nvl(all_tkt,0) = 0 then 0 
                              else nvl(cst_ftc, 0)/nvl(all_tkt, 0) end*100, 2) cst_ftc_pct
                   -- All resolved tickets should be included in the projected
                 , (case when bus_days_used_pct != 0 and (current_period = period_date or resolved_cnt > 0) then 
                         round((nvl(all_tkt,0)+nvl(resolved_cnt, 0))/bus_days_used_pct)
                    end) proj_cnt
                 , nvl(can_be_closed, 0) can_be_closed_cnt
                 , nvl(week_tkt_cnt, 0) week_cnt
                 , nvl(day_tkt_cnt, 0) day_cnt
                 , nvl(resolved_cnt, 0) resolved_cnt
                 , first_value(ct.ticket_obj) over(partition by trunc(pc.period_date, 'Q') order by pc.period_date) all_month_obj
                 , (case when trunc(pc.period_date,'Q') != trunc(pc.current_period,'Q') then round(sum(all_tkt) over (partition by trunc(pc.period_date, 'Q'))/3) end) month_avg
          from     (select add_months(trunc(helpdesk_load_date+6, 'MM'), 1 - level) period_date
                         , {itemType} item_type, {priority} priority, {envParamInd} env_param
                         , trunc(helpdesk_load_date,'MM') current_period
                         , helpdesk_load_date
                         , pct_resolve_days_used_fn('M', add_months(trunc(helpdesk_load_date+6, 'MM'), 1 - level)) bus_days_used_pct
                    from   dash_process_control
                    connect by level <= 16
                    order by add_months(trunc(helpdesk_load_date, 'MM'), 1 - level)) pc
                   left outer join closed_ticket_obj ct
                     on pc.period_date = ct.close_month
                    and pc.item_type = 'ALL'  -- only show objectives if ALL / ALL / Y!
                    and pc.priority = 'ALL'
                    and pc.env_param = 'Y'
                   left outer join
                   (select  close_month
                          , sum(non_mp_tkt_cnt) other
                          , sum(mp_tkt_cnt) mnp
                          , sum(all_tkt_cnt) all_tkt
                          , sum(cst_ftc_tkt_cnt) cst_ftc
                          , sum(can_be_closed_tkt_cnt) can_be_closed
                          , sum(week_tkt_cnt) week_tkt_cnt
                          , sum(day_tkt_cnt) day_tkt_cnt
                          , sum(resolved_cnt) resolved_cnt
                    from    closed_ticket_mv, dash_process_control pc
                    where   close_month > trunc(add_months(pc.helpdesk_load_date, -15), 'MM')    
                    and     ({priority} = 'ALL' or priority = {priority})
                    and     ({envParamInd} = 'N' or env_parm_ind = {envParamInd})
                    and     ({itemType} = 'ALL'
                          or ({itemType} = 'ASSIGN_GROUP' and assign_group = {itemName}) 
                          or ({itemType} = 'SUPPORT_CATEGORY' and support_category = {itemName})
                          or ({itemType} = 'DIRECTOR' and group_manager = {itemName})
                          or ({itemType} = 'PROJECT_MANAGER' and group_pm = {itemName})
                            )   
                    group by close_month
                    order by close_month) ab
                     on pc.period_date = ab.close_month 
         ) t
where    period_date >= add_months(current_period,-12)
order by period_date
	]]></statement>
	
	<statement code="CLOSEDTKT_Quarterly_Chart_Data"><![CDATA[
select   'Q'||to_char(period_date, 'Q-YYYY') label
       , 'Q'||to_char(period_date, 'Q-YYYY') label_group
       , (case when period_date = current_period then 'Y' else 'N' end) current_period_ind
       , period_date
       , (case when period_date <= current_period then other_cnt end) other_cnt
       , (case when period_date <= current_period then mnp_cnt end) mnp_cnt
       , (case when period_date <= current_period then cnt end) cnt
       , (case when period_date <= current_period then obj end) obj
       , round(obj * 1.05) high_obj
       , round(obj * 0.95) low_obj
       , tkt_status
       , (case when period_date <= current_period then cst_ftc_cnt end) cst_ftc_cnt
       , (case when period_date <= current_period then cst_ftc_pct end) cst_ftc_pct
       , proj_cnt
       , (case when period_date <= current_period then can_be_closed_cnt end) can_be_closed_cnt
       , (case when period_date <= current_period then week_cnt end) week_cnt
       , (case when period_date <= current_period then day_cnt end) day_cnt
       , resolved_cnt
       , prev_mnp_cnt
       , prev_other_cnt
       , prev_cnt
from     (select   c.*
                 , (case when obj is null then null
                         when nvl(proj_cnt,cnt)/obj >= 1.05 then 'blue'
                         when nvl(proj_cnt,cnt)/obj >= 1 then 'green'
                         when nvl(proj_cnt,cnt)/obj >= 0.95 then 'yellow'
                         when nvl(proj_cnt,cnt)/obj < 0.95 then 'red'
                    end) tkt_status
                , lag(mnp_cnt) over (partition by to_char(period_date,'Q') order by period_date) prev_mnp_cnt
                , lag(other_cnt) over (partition by to_char(period_date,'Q') order by period_date) prev_other_cnt
                , lag(cnt) over (partition by to_char(period_date,'Q') order by period_date) prev_cnt
          from    (select   pc.current_period
                          , pc.period_date
                          , nvl(other, 0) other_cnt
                          , nvl(mnp, 0) mnp_cnt
                          , nvl(all_tkt, 0) cnt
                          , (ct.ticket_obj)*3 obj
                          , nvl(cst_ftc, 0) cst_ftc_cnt
                          , round(case when nvl(all_tkt,0) = 0 then 0 
                                       else nvl(cst_ftc, 0)/nvl(all_tkt, 0) end*100, 2) cst_ftc_pct
                            -- All resolved tickets should be included in the projected
                          , (case when bus_days_used_pct != 0 and current_period = period_date or resolved_cnt > 0 then 
                                  round((nvl(all_tkt,0)+nvl(resolved_cnt, 0))/bus_days_used_pct)
                             end) proj_cnt
                          , nvl(can_be_closed, 0) can_be_closed_cnt
                          , nvl(week_tkt_cnt, 0) week_cnt
                          , nvl(day_tkt_cnt, 0) day_cnt
                          , nvl(resolved_cnt, 0) resolved_cnt
                          , row_number() over(partition by 1 order by pc.period_date) rnum
                   from     (select add_months(trunc(helpdesk_load_date+6, 'Q'), (1 - level)*3) period_date
                                  , {itemType} item_type, {priority} priority, {envParamInd} env_param
                                  , trunc(helpdesk_load_date,'Q') current_period
                                  , helpdesk_load_date
                                  , pct_resolve_days_used_fn('Q', add_months(trunc(helpdesk_load_date+6, 'Q'), (1 - level)*3)) bus_days_used_pct
                             from   dash_process_control
                             connect by level <= 9
                             order by add_months(trunc(helpdesk_load_date, 'Q'), (1 - level)*3)) pc
                            left outer join closed_ticket_obj ct
                              on pc.period_date = ct.close_month
                             and pc.item_type = 'ALL'  -- only show objectives if ALL / ALL / Y!
                             and pc.priority = 'ALL'
                             and pc.env_param = 'Y'
                            left outer join
                            (select  trunc(close_month,'Q') close_quarter
                                   , sum(non_mp_tkt_cnt) other
                                   , sum(mp_tkt_cnt) mnp
                                   , sum(all_tkt_cnt) all_tkt
                                   , sum(cst_ftc_tkt_cnt) cst_ftc
                                   , sum(can_be_closed_tkt_cnt) can_be_closed
                                   , sum(week_tkt_cnt) week_tkt_cnt
                                   , sum(day_tkt_cnt) day_tkt_cnt
                                   , sum(resolved_cnt) resolved_cnt
                             from    closed_ticket_mv, dash_process_control pc
                             where   close_month > trunc(add_months(trunc(pc.helpdesk_load_date,'Q'), -24), 'MM')
                             and     ({priority} = 'ALL' or priority = {priority})
                             and     ({envParamInd} = 'N' or env_parm_ind = {envParamInd})
                             and     ({itemType} = 'ALL'
                                   or ({itemType} = 'ASSIGN_GROUP' and assign_group = {itemName}) 
                                   or ({itemType} = 'SUPPORT_CATEGORY' and support_category = {itemName})
                                   or ({itemType} = 'DIRECTOR' and group_manager = {itemName})
                                   or ({itemType} = 'PROJECT_MANAGER' and group_pm = {itemName})
                                     )   
                             group by trunc(close_month,'Q')
                             order by trunc(close_month,'Q')) ab
                              on pc.period_date = ab.close_quarter
                   order by period_date
                  ) c
         )
where    rnum > 1
--where    rnum between 5 and 9
order by rnum, label
	]]></statement>
	
  	<statement code="CLOSEDTKT_Tickets_Closed"><![CDATA[
select /*+ parallel(a,4) */
         ticket_id
       , to_char(to_date(open_month,'YYYYMM'),'MM/YYYY') OPEN_MONTH
       , assign_group
       , ticket_status
       , support_category
       , submitted_date
       , resolved_date
       , nvl(trunc(resolved_date), trunc(sysdate)) - trunc(submitted_date) ticket_age
       , assignee
       , last_modified_by
       , LAST_MODIFIED_DATE
       , priority
       , status
       , pending
       , category
       , type
       , item
       , summary
       , regexp_replace(solution_summary, '[[:cntrl:]]', ' ') solution_summary
       , root_cause
       , region
       , site
       , orig_submitter
       , submitter_name
       , resolution_category
       , resolution_category_tier_2
       , status_reason_desc
       , department
       , repaired_time
       , cus_status_reason
       , assigned_group1
       , start_assigned_time1
       , total_time_spent_in_assigned1
       , end_assigned_time1
       , created_on
       , resolution_category_audit
       , group_manager
       , group_pm
       , sla_bypass_ind
       , desktop_ind
       , repair_target_ind
       , resolution_target_ind
       , reported_source
       , reported_source_audit
       , client_name
       , qc_defect_id
       , wrf_id
       , summary_desc
       , web_response_due_by
       , start_assigned_time2
       , end_assigned_time2
       , total_time_spent_in_assigned2
       , business_unit
       , repair_due_by
       , resolution_due_by
       , entry_id
       , priority_audit
       , assignee_date
       , sales_code
       , last_upd_user_id
       , last_upd_user_name
       , qc_defect_status
       , qc_defect_source
       , qc_defect_planned_closing_ver
       , closed_date
       , closed_month
       , env_parm_ind
       , vendor_operating_co
       , incident_association_type
       , original_incident_number
       , city
       , state_province
       , assigned_support_company
       , owner_group
       , response_target
       , response_status
       , response_date
       , response_set
       , repair_target
       , repair_status
       , repair_date
       , repair_set
       , resolution_target
       , resolution_status
       , resolution_date
       , resolution_set
       , vip
       , assigned_support_organization
       , rqc_sla_start
from     dash_helpdesk a
         cross join dash_process_control dpc
where    closed_date is not null
and      status = 'CLOSED'
and      (({periodType} = 'ThisWeek' and trunc(closed_date, 'DAY') >= trunc(dpc.helpdesk_load_date, 'DAY'))
      or  ({periodType} = 'Today' and trunc(closed_date) = trunc(dpc.helpdesk_load_date))
      or  ({periodType} = 'M' and {periodDate} is not null and trunc(closed_date,'MM') = to_date({periodDate},'Mon-YY'))
           -- "periodDate" for quarters should be formatted like Q1-2013
      or  ({periodType} = 'Q' and {periodDate} is not null and trunc(closed_date,'Q') = to_date(decode(substr({periodDate},2,1),'2','04',3,'07',4,'10','01')||substr({periodDate},-4),'MM-YYYY'))
         )
and      ({itemType} = 'ALL'
       or ({itemType} = 'ASSIGN_GROUP' and assign_group = {itemName})
       or ({itemType} = 'SUPPORT_CATEGORY' and support_category = {itemName})
       or ({itemType} = 'DIRECTOR' and group_manager = {itemName})
       or ({itemType} = 'PROJECT_MANAGER' and group_pm = {itemName})
         )
and      ({priority} = 'ALL' or priority = {priority})
and      ({envParamInd} = 'N' or env_parm_ind = {envParamInd})
and      ({mnpInd} = 'ALL'
          or (case when upper(root_cause) like '%M%&%P%'
                     or upper(root_cause) like '%M% AND P%' then 'Y' else 'N'
              end) = {mnpInd})
order by closed_date desc
  	]]>
  	</statement>
 
 	<statement code="CLOSEDTKT_Tickets_Resolved"><![CDATA[
select /*+ parallel(a,4) */
         ticket_id
       , to_char(to_date(open_month,'YYYYMM'),'MM/YYYY') OPEN_MONTH
       , assign_group
       , ticket_status
       , support_category
       , submitted_date
       , resolved_date
       , nvl(trunc(resolved_date), trunc(sysdate)) - trunc(submitted_date) ticket_age
       , assignee
       , last_modified_by
       , LAST_MODIFIED_DATE
       , priority
       , status
       , pending
       , category
       , type
       , item
       , summary
       , regexp_replace(solution_summary, '[[:cntrl:]]', ' ') solution_summary
       , root_cause
       , region
       , site
       , orig_submitter
       , submitter_name
       , resolution_category
       , resolution_category_tier_2
       , status_reason_desc
       , department
       , repaired_time
       , cus_status_reason
       , assigned_group1
       , start_assigned_time1
       , total_time_spent_in_assigned1
       , end_assigned_time1
       , created_on
       , resolution_category_audit
       , group_manager
       , group_pm
       , sla_bypass_ind
       , desktop_ind
       , repair_target_ind
       , resolution_target_ind
       , reported_source
       , reported_source_audit
       , client_name
       , qc_defect_id
       , wrf_id
       , summary_desc
       , web_response_due_by
       , start_assigned_time2
       , end_assigned_time2
       , total_time_spent_in_assigned2
       , business_unit
       , repair_due_by
       , resolution_due_by
       , entry_id
       , priority_audit
       , assignee_date
       , sales_code
       , last_upd_user_id
       , last_upd_user_name
       , qc_defect_status
       , qc_defect_source
       , qc_defect_planned_closing_ver
       , closed_date
       , closed_month
       , env_parm_ind
       , vendor_operating_co
       , incident_association_type
       , original_incident_number
       , city
       , state_province
       , assigned_support_company
       , owner_group
       , response_target
       , response_status
       , response_date
       , response_set
       , repair_target
       , repair_status
       , repair_date
       , repair_set
       , resolution_target
       , resolution_status
       , resolution_date
       , resolution_set
       , vip
       , assigned_support_organization
       , rqc_sla_start
from     dash_helpdesk a
where    status = 'RESOLVED'
and      resolved_date is not null
and      closed_date is null
and      (({periodType} = 'M' and trunc(trunc(resolved_date - 3600*2/86400)+6,'MM') = to_date({periodDate},'Mon-YY'))
          -- "periodDate" for quarters should be formatted like Q1-2013
       or ({periodType} = 'Q' and trunc(trunc(resolved_date - 3600*2/86400)+6,'Q') = to_date(decode(substr({periodDate},2,1),'2','04',3,'07',4,'10','01')||substr({periodDate},-4),'MM-YYYY'))  
         )
and      ({itemType} = 'ALL'
       or ({itemType} = 'ASSIGN_GROUP' and assign_group = {itemName}) 
       or ({itemType} = 'SUPPORT_CATEGORY' and support_category = {itemName})
       or ({itemType} = 'DIRECTOR' and group_manager = {itemName})
       or ({itemType} = 'PROJECT_MANAGER' and group_pm = {itemName})
         )
and      ({priority} = 'ALL' or priority = {priority})
and      ({envParamInd} = 'N' or env_parm_ind = {envParamInd})
and      ({mnpInd} = 'ALL'
          or (case when upper(root_cause) like '%M%&%P%'
                     or upper(root_cause) like '%M% AND P%' then 'Y' else 'N' 
              end) = {mnpInd})
order by resolved_date desc
 	]]></statement>
 
 	<statement code="CLOSEDTKT_Tickets_That_Can_Be_Closed"><![CDATA[
select /*+ parallel(a,4) */
         ticket_id
       , to_char(to_date(open_month,'YYYYMM'),'MM/YYYY') OPEN_MONTH
       , assign_group
       , ticket_status
       , support_category
       , submitted_date
       , resolved_date
       , nvl(trunc(resolved_date), trunc(sysdate)) - trunc(submitted_date) ticket_age
       , assignee
       , last_modified_by
       , LAST_MODIFIED_DATE
       , priority
       , status
       , pending
       , category
       , type
       , item
       , summary
       , regexp_replace(solution_summary, '[[:cntrl:]]', ' ') solution_summary
       , root_cause
       , region
       , site
       , orig_submitter
       , submitter_name
       , resolution_category
       , resolution_category_tier_2
       , status_reason_desc
       , department
       , repaired_time
       , cus_status_reason
       , assigned_group1
       , start_assigned_time1
       , total_time_spent_in_assigned1
       , end_assigned_time1
       , created_on
       , resolution_category_audit
       , group_manager
       , group_pm
       , sla_bypass_ind
       , desktop_ind
       , repair_target_ind
       , resolution_target_ind
       , reported_source
       , reported_source_audit
       , client_name
       , qc_defect_id
       , wrf_id
       , summary_desc
       , web_response_due_by
       , start_assigned_time2
       , end_assigned_time2
       , total_time_spent_in_assigned2
       , business_unit
       , repair_due_by
       , resolution_due_by
       , entry_id
       , priority_audit
       , assignee_date
       , sales_code
       , last_upd_user_id
       , last_upd_user_name
       , qc_defect_status
       , qc_defect_source
       , qc_defect_planned_closing_ver
       , closed_date
       , closed_month
       , env_parm_ind
       , vendor_operating_co
       , incident_association_type
       , original_incident_number
       , city
       , state_province
       , assigned_support_company
       , owner_group
       , response_target
       , response_status
       , response_date
       , response_set
       , repair_target
       , repair_status
       , repair_date
       , repair_set
       , resolution_target
       , resolution_status
       , resolution_date
       , resolution_set
       , vip
       , assigned_support_organization
       , rqc_sla_start
from     dash_helpdesk a
where    closed_date is null
and      status != 'CLOSED'
and      defects_handled_fn(QC_DEFECT_STATUS, QC_DEFECT_SOURCE) != 0
and      resolved_date is null
and      ({itemType} = 'ALL'
       or ({itemType} = 'ASSIGN_GROUP' and assign_group = {itemName}) 
       or ({itemType} = 'SUPPORT_CATEGORY' and support_category = {itemName})
       or ({itemType} = 'DIRECTOR' and group_manager = {itemName})
       or ({itemType} = 'PROJECT_MANAGER' and group_pm = {itemName})
         )
and      ({priority} = 'ALL' or priority = {priority})
and      ({envParamInd} = 'N' or env_parm_ind = {envParamInd})
and      ({mnpInd} = 'ALL'
          or (case when upper(root_cause) like '%M%&%P%'
                     or upper(root_cause) like '%M% AND P%' then 'Y' else 'N' 
              end) = {mnpInd})
order by closed_date desc
 	]]></statement>

</sql>