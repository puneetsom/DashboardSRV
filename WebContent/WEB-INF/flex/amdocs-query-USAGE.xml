<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql SYSTEM "amdocs-query-config.dtd">
<sql type="CdwSQL">
	<statement code="Usage_Activities"><![CDATA[
select app_name
     , sub_app_name
     , activity_desc activity
     , activity activity_id
     , default_ind
     , region_label
     , office_label
     , employee_label
     , manager_label
     , uniques_label
     , usage_label
     , detail_grid_id
from   app_activity_ca
	]]></statement>

	<statement code="Usage_Data">
   		<![CDATA[
	  select   s.app_name
             , a.activity activity_id
             , period_type
             , to_char(s.period_date,'DD-MON-YY') period_date
             , (case period_type
                        when 'D' then to_char(period_date,'Mon fmdd')
                        when 'W' then to_char(period_date,'Mon fmdd')
                        when 'M' then to_char(period_date,'Mon YYYY')
                     end) period
             , s.total_uniques
             , s.prev_total_uniques
             , s.total_usage
             , s.prev_total_usage
             , s.projected_uniques
             , s.projected_usage
             , s.uniques_change_pct
             , s.usage_change_pct
      from     (select t.app_name
                     , t.activity
                     , t.period_date
                     , period_type
                     , nvl(d.total_uniques,0) total_uniques
                     , nvl(lag(d.total_uniques,(case period_type when 'D' then 7 else 1 end))
                           over (partition by t.app_name
                                            , t.activity
                                 order  by    t.period_date),0) prev_total_uniques
                     , nvl(d.total_usage,0) total_usage
                     , nvl(lag(d.total_usage,(case period_type when 'D' then 7 else 1 end))
                           over (partition by t.app_name
                                            , t.activity
                                 order  by    t.period_date),0) prev_total_usage
                     , nvl(d.projected_uniques, 0) projected_uniques
                     , nvl(d.projected_usage, 0) projected_usage
                     , d.uniques_change_pct
                     , d.usage_change_pct
                from   (select app_name
                             , activity
                             , period_date
                             , total_uniques
                             , total_usage
                             , projected_uniques
                             , projected_usage
                             , uniques_change_pct
                             , usage_change_pct
                        from   app_activity_smy_ca
                        where  period_type = {periodType}
                        and    region_code = {regionCode}
                        and    office_code = {officeCode}
                        and    office_type = {officeType}
                        and    employee_id = {employeeId}
                        and    manager_id = {managerId}) d
                       -- Generate rows for missing values based all the period_date for the period_type specified
                       right outer join
                            (select distinct
                                    a.app_name
                                  , a.activity
                                  , s.period_date
                                  , s.period_type
                             from   app_activity_ca a
                                    cross join app_activity_smy_ca s
                            where   s.period_type = {periodType}
                             and    s.region_code = 0
                             and    s.office_code = ' '
                             and    s.office_type = 0
                             and    s.employee_id = 0
                             and    s.manager_id = 0) t
                          on t.app_name = d.app_name
                         and t.activity = d.activity
                         and t.period_date = d.period_date
               ) s
               join app_activity_ca a
                 on s.app_name = a.app_name
                and s.activity = a.activity
               cross join app_activity_control_ca aac
      where    period_date >=
                    (case period_type
                        when 'D' then trunc(aac.load_date)-14                   -- 14 days
                        when 'W' then trunc(aac.load_date,'DAY')-(7*14)         -- 14 weeks
                        when 'M' then add_months(trunc(aac.load_date,'MM'),-14) -- 14 months
                     end)
      and      (s.app_name, s.activity) in 
               (select distinct a.app_name, a.activity
                from   app_activity_ca a
                       join app_activity_priv_ca ap
                         on (ap.app_name = '*' or a.app_name = ap.app_name)
                        and (ap.activity = '*' or a.activity = ap.activity)
                where  priv_code in (select p.priv_code
                                     from   caas_emp_privs ep
                                            join caas_priv p
                                              on ep.priv_id = p.priv_id -- todo add join to caas_inherited_privs
                                     where  ep.app_id = 4 
                                     and    ep.employee_id = {userEmployeeId}))
      order by s.app_name, a.sub_app_name, a.activity_order, a.activity_desc, s.period_date
	]]>
	</statement>
	
	<statement code="Usage_Activity_Summary"><![CDATA[
select   s.region_code
       , replace(replace(initcap(dd.decode_display),' Sca',' SCA'),' Sea',' SEA') region_name
       , s.office_code
       , s.office_type
       , o.office_name
       , s.employee_id
       , e.login_name
       , (case when e.employee_id is not null then e.employee_surname||', '||e.emp_first_name end) employee_name 
       , s.total_uniques
       , s.total_usage
       , s.manager_id
       , m.login_name manager_login_name
       , (case when m.employee_id is not null then m.employee_surname||', '||m.emp_first_name end) manager_name 
from     (select region_code
               , office_code
               , office_type
               , employee_id
               , total_uniques
               , total_usage
               , manager_id
          from   app_activity_smy_ca
          where  period_type = {periodType}
          and    period_date = {periodDate}
          and    app_name = {appName}
          and    activity = {activity}
          and    (   ({category} = 'REGION'
                  and region_code != 0 
                  and office_code = ' ' 
                  and office_type = 0 
                  and employee_id = 0
                  and manager_id = 0) 
               or    ({category} = 'OFFICE' 
                  and region_code = {regionCode} 
                  and office_code != ' ' 
                  and office_type != 0 
                  and employee_id = 0
                  and manager_id = 0) 
               or    ({category} = 'MANAGER' 
                  and region_code = {regionCode} 
                  and office_code = ' ' 
                  and office_type = 0 
                  and employee_id = 0
                  and manager_id != 0)
               or    ({category} = 'OFFICE_EMPLOYEE' 
                  and region_code = {regionCode} 
                  and office_code = {officeCode} 
                  and office_type = {officeType}
                  and employee_id != 0
                  and manager_id = 0)
               or    ({category} = 'MANAGER_EMPLOYEE' 
                  and region_code = {regionCode} 
                  and manager_id = {managerId}
                  and office_code = ' ' 
                  and office_type = 0 
                  and employee_id != 0)  )
         ) s
         left outer join domain_decodes dd
           on 'REGIONCODE' = dd.domain_code
          and s.region_code = dd.code_value
         left outer join office o
           on s.office_code = o.office_code
          and s.office_type = o.office_type
         left outer join employee e
           on s.employee_id = e.employee_id
         left outer join employee m
           on s.manager_id = m.employee_id
order by replace(replace(initcap(dd.decode_display),' Sca',' SCA'),' Sea',' SEA')
       , o.office_name
       , (case when e.employee_id is not null then e.employee_surname||', '||e.emp_first_name end)
       , (case when m.employee_id is not null then m.employee_surname||', '||m.emp_first_name end)
	]]></statement>
	
	<statement code="Usage_Activity_Detail"><![CDATA[
select   s.region_code
       , replace(replace(initcap(dd.decode_display),' Sca',' SCA'),' Sea',' SEA') region_name
       , s.office_code
       , s.office_type
       , o.office_name
       , s.employee_id
       , e.login_name
       , (case when e.employee_id is not null then e.employee_surname||', '||e.emp_first_name end) employee_name 
       , s.manager_id
       , m.login_name manager_login_name
       , (case when m.employee_id is not null then m.employee_surname||', '||m.emp_first_name end) manager_name 
       , s.activity_date
       , s.customer_id
       , (case when c.customer_id is null then 'N/A' else c.customer_name end) customer_name
from     (select a.activity_date
               , o.region_code
               , a.office_code
               , a.office_type
               , a.employee_id
               , a.customer_id
               , a.manager_id
          from   app_activity_dtl_ca a
                 left outer join office o
                   on a.office_code = o.office_code
                  and a.office_type = o.office_type
          where  (case {periodType}
                     when 'D' then trunc(activity_date)
                     when 'W' then trunc(activity_date,'DAY')
                     when 'M' then trunc(activity_date,'MM') 
                  end) = {periodDate}
          and    a.app_name = {appName}
          and    a.activity = {activity}
          and    ({regionCode} = 0 or o.region_code = {regionCode})
          and    ({officeCode} = ' ' or (a.office_code = {officeCode} and a.office_type = {officeType}))
          and    ({employeeId} = 0 or a.employee_id = {employeeId})
          and    ({managerId} = 0 or a.manager_id = {managerId})
         ) s
         left outer join domain_decodes dd
           on 'REGIONCODE' = dd.domain_code
          and s.region_code = dd.code_value
         left outer join office o
           on s.office_code = o.office_code
          and s.office_type = o.office_type
         left outer join employee e
           on s.employee_id = e.employee_id
         left outer join denorm_cust_info c
           on s.customer_id = c.customer_id
         left outer join employee m
           on s.manager_id = m.employee_id
order by activity_date
       , replace(replace(initcap(dd.decode_display),' Sca',' SCA'),' Sea',' SEA')
       , o.office_name
       , (case when e.employee_id is not null then e.employee_surname||', '||e.emp_first_name end)
       , (case when m.employee_id is not null then m.employee_surname||', '||m.emp_first_name end)
	]]></statement>

<!-- 
   <statement code="Usage_Region_Data">
   		<![CDATA[
   		     SELECT  SMY.REGION_CODE, 
   		     		 DD.DECODE_DISPLAY REGION,  
   		     		 PERIOD_TYPE,  
   		     		 SUM(TOTAL_UNIQUES) TOTAL_UNIQUES, 
   		     		 SUM(TOTAL_USAGE) TOTAL_USAGE
             FROM APP_ACTIVITY_SMY SMY  
	             JOIN DOMAIN_DECODES DD 
	             ON DD.DOMAIN_CODE='REGIONCODE' 
	             AND DD.CODE_VALUE = SMY.REGION_CODE 
	             AND PERIOD_TYPE ={periodType}
	             AND (('ALL' = {activity} AND SMY.ACTIVITY <> ' ') OR {activity} = SMY.ACTIVITY)                     
             GROUP BY DD.DECODE_DISPLAY, SMY.REGION_CODE, PERIOD_TYPE 
             ORDER BY 1
		 ]]>
	</statement>
	
	<statement code="Usage_Office_Data">
   		<![CDATA[
   		    
   		    SELECT O.OFFICE_NAME, 
   		    	   PERIOD_TYPE, 
   		    	   SMY.OFFICE_TYPE ,  
   		    	   SMY.OFFICE_CODE, 
   		    	   SUM(TOTAL_UNIQUES) TOTAL_UNIQUES, 
   		    	   SUM(TOTAL_USAGE) TOTAL_USAGE
             FROM APP_ACTIVITY_SMY SMY
				JOIN OFFICE O
 				ON SMY.OFFICE_TYPE = O.OFFICE_TYPE 
 				AND SMY.OFFICE_CODE = O.OFFICE_CODE
 				AND SMY.PERIOD_TYPE ={periodType}
 				AND (('ALL' = {activity} AND SMY.ACTIVITY <> ' ') OR {activity} = SMY.ACTIVITY)
 				AND SMY.REGION_CODE = {regionCode} 
			GROUP BY O.OFFICE_NAME, PERIOD_TYPE, SMY.OFFICE_CODE, SMY.OFFICE_TYPE 
			ORDER BY 1      	
			     
		 ]]>
	</statement>
	
	<statement code="Usage_Rep_Data">
   		<![CDATA[
				SELECT SMY.EMPLOYEE_ID, SMY.PERIOD_TYPE, 
			            EMP.EMP_FIRST_NAME || ' ' || EMP.EMPLOYEE_SURNAME EMPLOYEE_NAME,
			            SUM(TOTAL_UNIQUES) TOTAL_UNIQUES, 
			            SUM(TOTAL_USAGE) TOTAL_USAGE 
			FROM APP_ACTIVITY_SMY SMY
			    JOIN EMPLOYEE EMP
			     ON SMY.EMPLOYEE_ID = EMP.EMPLOYEE_ID
			   	 AND SMY.PERIOD_TYPE ={periodType} 
			     AND (('ALL' = {activity} AND SMY.ACTIVITY <> ' ') OR {activity} = SMY.ACTIVITY)
			     AND SMY.REGION_CODE = {regionCode}
			     AND SMY.OFFICE_CODE = {officeCode}
			GROUP BY SMY.EMPLOYEE_ID, EMP.EMP_FIRST_NAME, EMP.EMPLOYEE_SURNAME, PERIOD_TYPE 
			ORDER BY 1
		]]>
	</statement>
-->
</sql>